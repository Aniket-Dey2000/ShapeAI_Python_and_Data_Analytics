# -*- coding: utf-8 -*-
"""AniketDey_Titanic_Survivors.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Lhl-sSFaTcXom261QpeLA-lDaDyC_MMc
"""

import pandas as pd
import numpy as np

"""we use pandas read_csv function to read the csv file in python and pandas DataFrame method to convert file into the data frame."""

df = pd.DataFrame(pd.read_csv('/content/train.csv'))
df.head()

df.shape

df.isnull().sum()

"""separating out the columns which have more than 35% of the values missing in the dataset"""

# df.isnull().sum() returns a pandas series with columns name as the label index
# and total count of null values in the column as it's value
# And we are storing only those columns which have more than 35% of the data missing.

drop_col = df.isnull().sum()[df.isnull().sum()>(35/100 * df.shape[0])]
drop_col

"""there is no specific number after which you should drop the column. it's jus that we decided that on our own according to what we want."""

drop_col.index

df.drop(drop_col.index, axis=1, inplace=True)
df.isnull().sum()

df.fillna(df.mean(), inplace = True)
df.isnull().sum()

"""Because Embarked contains string values, we see the details of that column seperately from the others as strings does not have mean and all."""

df['Embarked'].describe()

"""For Embarked attribute, we fill the NULL values with the most frequent values in the column."""

df['Embarked'].fillna('S',inplace=True)

df.isnull().sum()  ## NOW ALL THE NULL VALUES HAVE BEEN FILLED

df.corr()

"""sibsp : Number of Siblings/Spouses Aboard
parch : Number of parents/children aboard

so we can make a new column family_size by combining these two columns
"""

df['FamilySize'] = df['SibSp']+df['Parch']
df.drop(['SibSp', 'Parch'], axis=1, inplace=True)
df.corr()

"""FamilySize in the ship does not have much correlance with survival rate

Let's check if we weather the person was alone or not can affect the survival rate.
"""

df['Alone'] = [0 if df['FamilySize'][i]>0 else 1 for i in df.index]
df.head()

df.groupby(['Alone'])['Survived'].mean()

"""If the person is alone he/she has less chance of surviving.

> The reason might be the person who is travelling with his family might be belonging to rich and might be prioritized over other.


"""

df[['Alone','Fare']].corr()

"""so we can see if the person was not alone, the chance the ticket price is higher is high."""

df['Sex'] = [0 if df['Sex'][i]=='male' else 1 for i in df.index] # 1 for female, 0 for male
df.groupby(['Sex'])['Survived'].mean()

"""It shows. female passengers have more chances of surviving than male ones.

It shows woman were prioritized over men.
"""

df.groupby(['Embarked'])['Survived'].mean()

"""# **CONCLUSION**


1.  Female passengers were prioritized over men

2.  People with high class or rich people have higher survival rate than others.The hierarichy might have been followed while saving the passengers.

3.   Passengers travelling with their family have higher survival rate.

4.   Passengers who borded the ship at Cherbourg, survived more in proportion than the others.




"""